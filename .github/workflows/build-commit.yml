# This is a basic workflow to help you get started with Actions

name: build-commit
concurrency: build-commit

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # see https://github.com/actions/checkout#usage for reference
      - uses: actions/checkout@v3
        with:
          ref: build
          fetch-depth: 0
      - run: |
          git fetch --no-tags origin main
          git checkout -b main origin/main
          git switch build

      # - name: Cache Rust dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.cargo
      #     key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.toml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-rust-
      #
      # - name: Cache LuaRocks dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.luarocks
      #     key: ${{ runner.os }}-luarocks-${{ hashFiles('**/luarocks.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-luarocks-
      #
      # - name: Cache LaTeX packages
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       /usr/share/texlive
      #     key: texlive-packages-${{ runner.os }}
      #     restore-keys: texlive-packages-

      - name: apt stuff
        run: |
          sudo apt update
          sudo apt install -y graphviz
          if ! dpkg -l | grep -q texlive-latex-extra; then
                sudo apt install -y graphviz texlive texlive-latex-extra
          else
            echo "TeX Live packages are already installed."
          fi

      - name: setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install lua
        uses: leafo/gh-actions-lua@v9

      - name: Install LuaRocks
        uses: leafo/gh-actions-luarocks@v4.3.0

      - name: install luarocks deps
        run: |
          luarocks install lua-term
          luarocks install luaprompt
          luarocks install lua_cliargs

      - name: update on main
        run: |
          git config --global user.name "Updater"
          git config --global user.email "updater@example.com"
          git merge --no-ff main

      # after merge, since maybe the requirements.txt has changed
      - name: setup python/pip
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: install python deps
        run: pip install -r requirements.txt

      - name: restore modification times
        run: ./restore-ts.sh

      - name: Build rust
        run: |
          cd rust && cargo build --release

      - name: Build results files
        run: |
          make -f Makefile.action all
          make -f Makefile.action stats.pdf

      # - name: ls
      #   run: ls -al ./*

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Built results
          branch: build
